+package org.jpeek.calculus.eo
+alias org.jpeek.calculus.eo.isAUsedByM
+alias org.jpeek.calculus.eo.unique

[class] > scom
  class.methods.length > numOfMethods
  class.atts.length > numOfAttributes
  [i iMax j jMax] > sum
    (^.class.methods.get i) > firstM
    (^.class.methods.get j) > secondM
    unique > cardUnion
      appendAll.
        firstM.atts
        secondM.atts
    (cardUnion.length.toFloat).div (^.numOfAttributes.toFloat) > weightFactor

    reduce. > cardIntersection
      firstM.atts
      0
      []
        [accumulator current] > reduce
          if. > @
            isAUsedByM current (^.^.secondM) 0
            add.
              accumulator
              1
            accumulator

    (cardIntersection.toFloat).div (^.numOfAttributes.toFloat) > connectionIntensity
    if. > @
      i.geq iMax
      0.0
      if.
        j.geq jMax
        sum
          i.add 1
          iMax
          i.add 2
          jMax
        add.
          sum
            i
            iMax
            j.add 1
            jMax
          mul.
            connectionIntensity
            weightFactor

  if. > @
    or.
      numOfAttributes.less 1
      numOfMethods.less 2
    0.0
    mul.
      div.
         2.0
         mul.
           numOfMethods.toFloat
           sub.
             numOfMethods.toFloat
             1.0
      sum 0 (numOfMethods.sub 1) 1 numOfMethods
